# Generated by Django 5.0.7 on 2024-11-13 06:04

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('equity_optimizer', '0001_initial'), ('equity_optimizer', '0002_stockdata_daily_return_stockdata_trend'), ('equity_optimizer', '0003_stockdata_created_at_stockdata_updated_at'), ('equity_optimizer', '0004_stock_created_at_stock_updated_at'), ('equity_optimizer', '0005_alter_stockdata_adj_close_alter_stockdata_close_and_more'), ('equity_optimizer', '0006_alter_stock_created_at_alter_stock_updated_at_and_more'), ('equity_optimizer', '0007_remove_stock_average_daily_volume_and_more'), ('equity_optimizer', '0008_stock_delisted')]

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticker', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('sector', models.CharField(blank=True, max_length=100, null=True)),
                ('market_cap', models.BigIntegerField(blank=True, null=True)),
                ('enterprise_value', models.BigIntegerField(blank=True, null=True)),
                ('trailing_pe', models.FloatField(blank=True, null=True)),
                ('forward_pe', models.FloatField(blank=True, null=True)),
                ('peg_ratio', models.FloatField(blank=True, null=True)),
                ('price_to_book', models.FloatField(blank=True, null=True)),
                ('profit_margin', models.FloatField(blank=True, null=True)),
                ('operating_margin', models.FloatField(blank=True, null=True)),
                ('revenue', models.BigIntegerField(blank=True, null=True)),
                ('gross_profit', models.BigIntegerField(blank=True, null=True)),
                ('ebitda', models.BigIntegerField(blank=True, null=True)),
                ('net_income', models.BigIntegerField(blank=True, null=True)),
                ('diluted_eps', models.FloatField(blank=True, null=True)),
                ('total_cash', models.BigIntegerField(blank=True, null=True)),
                ('total_debt', models.BigIntegerField(blank=True, null=True)),
                ('total_assets', models.BigIntegerField(blank=True, null=True)),
                ('total_liabilities', models.BigIntegerField(blank=True, null=True)),
                ('dividend_yield', models.FloatField(blank=True, null=True)),
                ('dividend_rate', models.FloatField(blank=True, null=True)),
                ('payout_ratio', models.FloatField(blank=True, null=True)),
                ('beta', models.FloatField(blank=True, null=True)),
                ('fifty_two_week_high', models.FloatField(blank=True, null=True)),
                ('fifty_two_week_low', models.FloatField(blank=True, null=True)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('book_value', models.FloatField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('esg_scores', models.JSONField(blank=True, null=True)),
                ('ex_dividend_date', models.DateField(blank=True, null=True)),
                ('fifty_day_average', models.FloatField(blank=True, null=True)),
                ('forward_eps', models.FloatField(blank=True, null=True)),
                ('full_time_employees', models.IntegerField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=100, null=True)),
                ('last_dividend_date', models.DateField(blank=True, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
                ('long_business_summary', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=50, null=True)),
                ('recommendations', models.JSONField(blank=True, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('trailing_eps', models.FloatField(blank=True, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('delisted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StockData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('open', models.FloatField()),
                ('high', models.FloatField()),
                ('low', models.FloatField()),
                ('close', models.FloatField()),
                ('adj_close', models.FloatField()),
                ('volume', models.BigIntegerField()),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historical_data', to='equity_optimizer.stock')),
                ('daily_return', models.FloatField(blank=True, null=True)),
                ('trend', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'indexes': [models.Index(fields=['stock', 'date'], name='equity_opti_stock_i_ff41e3_idx')],
                'unique_together': {('stock', 'date')},
            },
        ),
    ]
